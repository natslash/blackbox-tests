// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subjectz.proto

package axoom.subjectz.v1;

public final class Subjectz {
  private Subjectz() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SubjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axoom.subjectz.v1.Subject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The unique Subject ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The unique Subject ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * A name describing the Subject
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * A name describing the Subject
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code axoom.subjectz.v1.Subject}
   */
  public  static final class Subject extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axoom.subjectz.v1.Subject)
      SubjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Subject.newBuilder() to construct.
    private Subject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Subject() {
      id_ = "";
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Subject(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axoom.subjectz.v1.Subjectz.Subject.class, axoom.subjectz.v1.Subjectz.Subject.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The unique Subject ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The unique Subject ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * A name describing the Subject
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * A name describing the Subject
     * </pre>
     *
     * <code>string name = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABELS_FIELD_NUMBER = 4;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, labels__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axoom.subjectz.v1.Subjectz.Subject)) {
        return super.equals(obj);
      }
      axoom.subjectz.v1.Subjectz.Subject other = (axoom.subjectz.v1.Subjectz.Subject) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getName()
          .equals(other.getName());
      result = result && internalGetLabels().equals(
          other.internalGetLabels());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.Subject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axoom.subjectz.v1.Subjectz.Subject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axoom.subjectz.v1.Subject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axoom.subjectz.v1.Subject)
        axoom.subjectz.v1.Subjectz.SubjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axoom.subjectz.v1.Subjectz.Subject.class, axoom.subjectz.v1.Subjectz.Subject.Builder.class);
      }

      // Construct using axoom.subjectz.v1.Subjectz.Subject.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        name_ = "";

        internalGetMutableLabels().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_Subject_descriptor;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.Subject getDefaultInstanceForType() {
        return axoom.subjectz.v1.Subjectz.Subject.getDefaultInstance();
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.Subject build() {
        axoom.subjectz.v1.Subjectz.Subject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.Subject buildPartial() {
        axoom.subjectz.v1.Subjectz.Subject result = new axoom.subjectz.v1.Subjectz.Subject(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.name_ = name_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axoom.subjectz.v1.Subjectz.Subject) {
          return mergeFrom((axoom.subjectz.v1.Subjectz.Subject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axoom.subjectz.v1.Subjectz.Subject other) {
        if (other == axoom.subjectz.v1.Subjectz.Subject.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axoom.subjectz.v1.Subjectz.Subject parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axoom.subjectz.v1.Subjectz.Subject) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The unique Subject ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The unique Subject ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The unique Subject ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique Subject ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique Subject ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A name describing the Subject
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A name describing the Subject
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A name describing the Subject
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name describing the Subject
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A name describing the Subject
       * </pre>
       *
       * <code>string name = 2;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axoom.subjectz.v1.Subject)
    }

    // @@protoc_insertion_point(class_scope:axoom.subjectz.v1.Subject)
    private static final axoom.subjectz.v1.Subjectz.Subject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axoom.subjectz.v1.Subjectz.Subject();
    }

    public static axoom.subjectz.v1.Subjectz.Subject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Subject>
        PARSER = new com.google.protobuf.AbstractParser<Subject>() {
      @java.lang.Override
      public Subject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Subject(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Subject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Subject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axoom.subjectz.v1.Subjectz.Subject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubjectContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axoom.subjectz.v1.SubjectContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    boolean hasSubject();
    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.Subject getSubject();
    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectOrBuilder getSubjectOrBuilder();

    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    java.util.List<java.lang.String>
        getInstanceOfList();
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    int getInstanceOfCount();
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    java.lang.String getInstanceOf(int index);
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    com.google.protobuf.ByteString
        getInstanceOfBytes(int index);

    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    java.util.List<java.lang.String>
        getInstanceGraphFlattenedList();
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    int getInstanceGraphFlattenedCount();
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    java.lang.String getInstanceGraphFlattened(int index);
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    com.google.protobuf.ByteString
        getInstanceGraphFlattenedBytes(int index);

    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> 
        getInstanceGraphList();
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getInstanceGraph(int index);
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    int getInstanceGraphCount();
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getInstanceGraphOrBuilderList();
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getInstanceGraphOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code axoom.subjectz.v1.SubjectContext}
   */
  public  static final class SubjectContext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axoom.subjectz.v1.SubjectContext)
      SubjectContextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubjectContext.newBuilder() to construct.
    private SubjectContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubjectContext() {
      instanceOf_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      instanceGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      instanceGraph_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubjectContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              axoom.subjectz.v1.Subjectz.Subject.Builder subBuilder = null;
              if (subject_ != null) {
                subBuilder = subject_.toBuilder();
              }
              subject_ = input.readMessage(axoom.subjectz.v1.Subjectz.Subject.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subject_);
                subject_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                instanceOf_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              instanceOf_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                instanceGraphFlattened_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              instanceGraphFlattened_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                instanceGraph_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>();
                mutable_bitField0_ |= 0x00000008;
              }
              instanceGraph_.add(
                  input.readMessage(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          instanceOf_ = instanceOf_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          instanceGraphFlattened_ = instanceGraphFlattened_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          instanceGraph_ = java.util.Collections.unmodifiableList(instanceGraph_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axoom.subjectz.v1.Subjectz.SubjectContext.class, axoom.subjectz.v1.Subjectz.SubjectContext.Builder.class);
    }

    private int bitField0_;
    public static final int SUBJECT_FIELD_NUMBER = 1;
    private axoom.subjectz.v1.Subjectz.Subject subject_;
    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    public boolean hasSubject() {
      return subject_ != null;
    }
    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.Subject getSubject() {
      return subject_ == null ? axoom.subjectz.v1.Subjectz.Subject.getDefaultInstance() : subject_;
    }
    /**
     * <pre>
     * The Subject to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectOrBuilder getSubjectOrBuilder() {
      return getSubject();
    }

    public static final int INSTANCE_OF_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList instanceOf_;
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInstanceOfList() {
      return instanceOf_;
    }
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    public int getInstanceOfCount() {
      return instanceOf_.size();
    }
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    public java.lang.String getInstanceOf(int index) {
      return instanceOf_.get(index);
    }
    /**
     * <pre>
     * The Subject's root SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_of = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInstanceOfBytes(int index) {
      return instanceOf_.getByteString(index);
    }

    public static final int INSTANCE_GRAPH_FLATTENED_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList instanceGraphFlattened_;
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getInstanceGraphFlattenedList() {
      return instanceGraphFlattened_;
    }
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    public int getInstanceGraphFlattenedCount() {
      return instanceGraphFlattened_.size();
    }
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    public java.lang.String getInstanceGraphFlattened(int index) {
      return instanceGraphFlattened_.get(index);
    }
    /**
     * <pre>
     * The Subject's traversed SubjectType IDs
     * </pre>
     *
     * <code>repeated string instance_graph_flattened = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInstanceGraphFlattenedBytes(int index) {
      return instanceGraphFlattened_.getByteString(index);
    }

    public static final int INSTANCE_GRAPH_FIELD_NUMBER = 4;
    private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> instanceGraph_;
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getInstanceGraphList() {
      return instanceGraph_;
    }
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getInstanceGraphOrBuilderList() {
      return instanceGraph_;
    }
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    public int getInstanceGraphCount() {
      return instanceGraph_.size();
    }
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getInstanceGraph(int index) {
      return instanceGraph_.get(index);
    }
    /**
     * <pre>
     * The Subject's instance graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getInstanceGraphOrBuilder(
        int index) {
      return instanceGraph_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (subject_ != null) {
        output.writeMessage(1, getSubject());
      }
      for (int i = 0; i < instanceOf_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, instanceOf_.getRaw(i));
      }
      for (int i = 0; i < instanceGraphFlattened_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, instanceGraphFlattened_.getRaw(i));
      }
      for (int i = 0; i < instanceGraph_.size(); i++) {
        output.writeMessage(4, instanceGraph_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (subject_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubject());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < instanceOf_.size(); i++) {
          dataSize += computeStringSizeNoTag(instanceOf_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInstanceOfList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < instanceGraphFlattened_.size(); i++) {
          dataSize += computeStringSizeNoTag(instanceGraphFlattened_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getInstanceGraphFlattenedList().size();
      }
      for (int i = 0; i < instanceGraph_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, instanceGraph_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axoom.subjectz.v1.Subjectz.SubjectContext)) {
        return super.equals(obj);
      }
      axoom.subjectz.v1.Subjectz.SubjectContext other = (axoom.subjectz.v1.Subjectz.SubjectContext) obj;

      boolean result = true;
      result = result && (hasSubject() == other.hasSubject());
      if (hasSubject()) {
        result = result && getSubject()
            .equals(other.getSubject());
      }
      result = result && getInstanceOfList()
          .equals(other.getInstanceOfList());
      result = result && getInstanceGraphFlattenedList()
          .equals(other.getInstanceGraphFlattenedList());
      result = result && getInstanceGraphList()
          .equals(other.getInstanceGraphList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubject()) {
        hash = (37 * hash) + SUBJECT_FIELD_NUMBER;
        hash = (53 * hash) + getSubject().hashCode();
      }
      if (getInstanceOfCount() > 0) {
        hash = (37 * hash) + INSTANCE_OF_FIELD_NUMBER;
        hash = (53 * hash) + getInstanceOfList().hashCode();
      }
      if (getInstanceGraphFlattenedCount() > 0) {
        hash = (37 * hash) + INSTANCE_GRAPH_FLATTENED_FIELD_NUMBER;
        hash = (53 * hash) + getInstanceGraphFlattenedList().hashCode();
      }
      if (getInstanceGraphCount() > 0) {
        hash = (37 * hash) + INSTANCE_GRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getInstanceGraphList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axoom.subjectz.v1.Subjectz.SubjectContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axoom.subjectz.v1.SubjectContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axoom.subjectz.v1.SubjectContext)
        axoom.subjectz.v1.Subjectz.SubjectContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axoom.subjectz.v1.Subjectz.SubjectContext.class, axoom.subjectz.v1.Subjectz.SubjectContext.Builder.class);
      }

      // Construct using axoom.subjectz.v1.Subjectz.SubjectContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getInstanceGraphFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subjectBuilder_ == null) {
          subject_ = null;
        } else {
          subject_ = null;
          subjectBuilder_ = null;
        }
        instanceOf_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        instanceGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (instanceGraphBuilder_ == null) {
          instanceGraph_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          instanceGraphBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectContext_descriptor;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectContext getDefaultInstanceForType() {
        return axoom.subjectz.v1.Subjectz.SubjectContext.getDefaultInstance();
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectContext build() {
        axoom.subjectz.v1.Subjectz.SubjectContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectContext buildPartial() {
        axoom.subjectz.v1.Subjectz.SubjectContext result = new axoom.subjectz.v1.Subjectz.SubjectContext(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (subjectBuilder_ == null) {
          result.subject_ = subject_;
        } else {
          result.subject_ = subjectBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          instanceOf_ = instanceOf_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.instanceOf_ = instanceOf_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          instanceGraphFlattened_ = instanceGraphFlattened_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.instanceGraphFlattened_ = instanceGraphFlattened_;
        if (instanceGraphBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            instanceGraph_ = java.util.Collections.unmodifiableList(instanceGraph_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.instanceGraph_ = instanceGraph_;
        } else {
          result.instanceGraph_ = instanceGraphBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axoom.subjectz.v1.Subjectz.SubjectContext) {
          return mergeFrom((axoom.subjectz.v1.Subjectz.SubjectContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axoom.subjectz.v1.Subjectz.SubjectContext other) {
        if (other == axoom.subjectz.v1.Subjectz.SubjectContext.getDefaultInstance()) return this;
        if (other.hasSubject()) {
          mergeSubject(other.getSubject());
        }
        if (!other.instanceOf_.isEmpty()) {
          if (instanceOf_.isEmpty()) {
            instanceOf_ = other.instanceOf_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInstanceOfIsMutable();
            instanceOf_.addAll(other.instanceOf_);
          }
          onChanged();
        }
        if (!other.instanceGraphFlattened_.isEmpty()) {
          if (instanceGraphFlattened_.isEmpty()) {
            instanceGraphFlattened_ = other.instanceGraphFlattened_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureInstanceGraphFlattenedIsMutable();
            instanceGraphFlattened_.addAll(other.instanceGraphFlattened_);
          }
          onChanged();
        }
        if (instanceGraphBuilder_ == null) {
          if (!other.instanceGraph_.isEmpty()) {
            if (instanceGraph_.isEmpty()) {
              instanceGraph_ = other.instanceGraph_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureInstanceGraphIsMutable();
              instanceGraph_.addAll(other.instanceGraph_);
            }
            onChanged();
          }
        } else {
          if (!other.instanceGraph_.isEmpty()) {
            if (instanceGraphBuilder_.isEmpty()) {
              instanceGraphBuilder_.dispose();
              instanceGraphBuilder_ = null;
              instanceGraph_ = other.instanceGraph_;
              bitField0_ = (bitField0_ & ~0x00000008);
              instanceGraphBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getInstanceGraphFieldBuilder() : null;
            } else {
              instanceGraphBuilder_.addAllMessages(other.instanceGraph_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axoom.subjectz.v1.Subjectz.SubjectContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axoom.subjectz.v1.Subjectz.SubjectContext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private axoom.subjectz.v1.Subjectz.Subject subject_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.Subject, axoom.subjectz.v1.Subjectz.Subject.Builder, axoom.subjectz.v1.Subjectz.SubjectOrBuilder> subjectBuilder_;
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public boolean hasSubject() {
        return subjectBuilder_ != null || subject_ != null;
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.Subject getSubject() {
        if (subjectBuilder_ == null) {
          return subject_ == null ? axoom.subjectz.v1.Subjectz.Subject.getDefaultInstance() : subject_;
        } else {
          return subjectBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public Builder setSubject(axoom.subjectz.v1.Subjectz.Subject value) {
        if (subjectBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subject_ = value;
          onChanged();
        } else {
          subjectBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public Builder setSubject(
          axoom.subjectz.v1.Subjectz.Subject.Builder builderForValue) {
        if (subjectBuilder_ == null) {
          subject_ = builderForValue.build();
          onChanged();
        } else {
          subjectBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public Builder mergeSubject(axoom.subjectz.v1.Subjectz.Subject value) {
        if (subjectBuilder_ == null) {
          if (subject_ != null) {
            subject_ =
              axoom.subjectz.v1.Subjectz.Subject.newBuilder(subject_).mergeFrom(value).buildPartial();
          } else {
            subject_ = value;
          }
          onChanged();
        } else {
          subjectBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public Builder clearSubject() {
        if (subjectBuilder_ == null) {
          subject_ = null;
          onChanged();
        } else {
          subject_ = null;
          subjectBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.Subject.Builder getSubjectBuilder() {
        
        onChanged();
        return getSubjectFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectOrBuilder getSubjectOrBuilder() {
        if (subjectBuilder_ != null) {
          return subjectBuilder_.getMessageOrBuilder();
        } else {
          return subject_ == null ?
              axoom.subjectz.v1.Subjectz.Subject.getDefaultInstance() : subject_;
        }
      }
      /**
       * <pre>
       * The Subject to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.Subject subject = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.Subject, axoom.subjectz.v1.Subjectz.Subject.Builder, axoom.subjectz.v1.Subjectz.SubjectOrBuilder> 
          getSubjectFieldBuilder() {
        if (subjectBuilder_ == null) {
          subjectBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.Subject, axoom.subjectz.v1.Subjectz.Subject.Builder, axoom.subjectz.v1.Subjectz.SubjectOrBuilder>(
                  getSubject(),
                  getParentForChildren(),
                  isClean());
          subject_ = null;
        }
        return subjectBuilder_;
      }

      private com.google.protobuf.LazyStringList instanceOf_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInstanceOfIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          instanceOf_ = new com.google.protobuf.LazyStringArrayList(instanceOf_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInstanceOfList() {
        return instanceOf_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public int getInstanceOfCount() {
        return instanceOf_.size();
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public java.lang.String getInstanceOf(int index) {
        return instanceOf_.get(index);
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInstanceOfBytes(int index) {
        return instanceOf_.getByteString(index);
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public Builder setInstanceOf(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceOfIsMutable();
        instanceOf_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public Builder addInstanceOf(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceOfIsMutable();
        instanceOf_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public Builder addAllInstanceOf(
          java.lang.Iterable<java.lang.String> values) {
        ensureInstanceOfIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, instanceOf_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public Builder clearInstanceOf() {
        instanceOf_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's root SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_of = 2;</code>
       */
      public Builder addInstanceOfBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureInstanceOfIsMutable();
        instanceOf_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList instanceGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInstanceGraphFlattenedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          instanceGraphFlattened_ = new com.google.protobuf.LazyStringArrayList(instanceGraphFlattened_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getInstanceGraphFlattenedList() {
        return instanceGraphFlattened_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public int getInstanceGraphFlattenedCount() {
        return instanceGraphFlattened_.size();
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public java.lang.String getInstanceGraphFlattened(int index) {
        return instanceGraphFlattened_.get(index);
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInstanceGraphFlattenedBytes(int index) {
        return instanceGraphFlattened_.getByteString(index);
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public Builder setInstanceGraphFlattened(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceGraphFlattenedIsMutable();
        instanceGraphFlattened_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public Builder addInstanceGraphFlattened(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInstanceGraphFlattenedIsMutable();
        instanceGraphFlattened_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public Builder addAllInstanceGraphFlattened(
          java.lang.Iterable<java.lang.String> values) {
        ensureInstanceGraphFlattenedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, instanceGraphFlattened_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public Builder clearInstanceGraphFlattened() {
        instanceGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Subject's traversed SubjectType IDs
       * </pre>
       *
       * <code>repeated string instance_graph_flattened = 3;</code>
       */
      public Builder addInstanceGraphFlattenedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureInstanceGraphFlattenedIsMutable();
        instanceGraphFlattened_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> instanceGraph_ =
        java.util.Collections.emptyList();
      private void ensureInstanceGraphIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          instanceGraph_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>(instanceGraph_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> instanceGraphBuilder_;

      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getInstanceGraphList() {
        if (instanceGraphBuilder_ == null) {
          return java.util.Collections.unmodifiableList(instanceGraph_);
        } else {
          return instanceGraphBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public int getInstanceGraphCount() {
        if (instanceGraphBuilder_ == null) {
          return instanceGraph_.size();
        } else {
          return instanceGraphBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getInstanceGraph(int index) {
        if (instanceGraphBuilder_ == null) {
          return instanceGraph_.get(index);
        } else {
          return instanceGraphBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder setInstanceGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (instanceGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGraphIsMutable();
          instanceGraph_.set(index, value);
          onChanged();
        } else {
          instanceGraphBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder setInstanceGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (instanceGraphBuilder_ == null) {
          ensureInstanceGraphIsMutable();
          instanceGraph_.set(index, builderForValue.build());
          onChanged();
        } else {
          instanceGraphBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder addInstanceGraph(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (instanceGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGraphIsMutable();
          instanceGraph_.add(value);
          onChanged();
        } else {
          instanceGraphBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder addInstanceGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (instanceGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInstanceGraphIsMutable();
          instanceGraph_.add(index, value);
          onChanged();
        } else {
          instanceGraphBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder addInstanceGraph(
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (instanceGraphBuilder_ == null) {
          ensureInstanceGraphIsMutable();
          instanceGraph_.add(builderForValue.build());
          onChanged();
        } else {
          instanceGraphBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder addInstanceGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (instanceGraphBuilder_ == null) {
          ensureInstanceGraphIsMutable();
          instanceGraph_.add(index, builderForValue.build());
          onChanged();
        } else {
          instanceGraphBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder addAllInstanceGraph(
          java.lang.Iterable<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> values) {
        if (instanceGraphBuilder_ == null) {
          ensureInstanceGraphIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, instanceGraph_);
          onChanged();
        } else {
          instanceGraphBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder clearInstanceGraph() {
        if (instanceGraphBuilder_ == null) {
          instanceGraph_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          instanceGraphBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public Builder removeInstanceGraph(int index) {
        if (instanceGraphBuilder_ == null) {
          ensureInstanceGraphIsMutable();
          instanceGraph_.remove(index);
          onChanged();
        } else {
          instanceGraphBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder getInstanceGraphBuilder(
          int index) {
        return getInstanceGraphFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getInstanceGraphOrBuilder(
          int index) {
        if (instanceGraphBuilder_ == null) {
          return instanceGraph_.get(index);  } else {
          return instanceGraphBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
           getInstanceGraphOrBuilderList() {
        if (instanceGraphBuilder_ != null) {
          return instanceGraphBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(instanceGraph_);
        }
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addInstanceGraphBuilder() {
        return getInstanceGraphFieldBuilder().addBuilder(
            axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addInstanceGraphBuilder(
          int index) {
        return getInstanceGraphFieldBuilder().addBuilder(
            index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * The Subject's instance graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode instance_graph = 4;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder> 
           getInstanceGraphBuilderList() {
        return getInstanceGraphFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
          getInstanceGraphFieldBuilder() {
        if (instanceGraphBuilder_ == null) {
          instanceGraphBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder>(
                  instanceGraph_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          instanceGraph_ = null;
        }
        return instanceGraphBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axoom.subjectz.v1.SubjectContext)
    }

    // @@protoc_insertion_point(class_scope:axoom.subjectz.v1.SubjectContext)
    private static final axoom.subjectz.v1.Subjectz.SubjectContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axoom.subjectz.v1.Subjectz.SubjectContext();
    }

    public static axoom.subjectz.v1.Subjectz.SubjectContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubjectContext>
        PARSER = new com.google.protobuf.AbstractParser<SubjectContext>() {
      @java.lang.Override
      public SubjectContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubjectContext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubjectContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubjectContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axoom.subjectz.v1.Subjectz.SubjectContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubjectTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axoom.subjectz.v1.SubjectType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The unique SubjectType ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    java.lang.String getId();
    /**
     * <pre>
     * The unique SubjectType ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <pre>
     * The schema used in Records from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_schema_url = 2;</code>
     */
    java.lang.String getRecordSchemaUrl();
    /**
     * <pre>
     * The schema used in Records from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_schema_url = 2;</code>
     */
    com.google.protobuf.ByteString
        getRecordSchemaUrlBytes();

    /**
     * <pre>
     * The schema used in RecordMetas from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_meta_schema_url = 3;</code>
     */
    java.lang.String getRecordMetaSchemaUrl();
    /**
     * <pre>
     * The schema used in RecordMetas from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_meta_schema_url = 3;</code>
     */
    com.google.protobuf.ByteString
        getRecordMetaSchemaUrlBytes();

    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    int getLabelsCount();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    boolean containsLabels(
        java.lang.String key);
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getLabels();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getLabelsMap();
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    java.lang.String getLabelsOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code axoom.subjectz.v1.SubjectType}
   */
  public  static final class SubjectType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axoom.subjectz.v1.SubjectType)
      SubjectTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubjectType.newBuilder() to construct.
    private SubjectType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubjectType() {
      id_ = "";
      recordSchemaUrl_ = "";
      recordMetaSchemaUrl_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubjectType(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              recordSchemaUrl_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              recordMetaSchemaUrl_ = s;
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                labels_ = com.google.protobuf.MapField.newMapField(
                    LabelsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              labels__ = input.readMessage(
                  LabelsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              labels_.getMutableMap().put(
                  labels__.getKey(), labels__.getValue());
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetLabels();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axoom.subjectz.v1.Subjectz.SubjectType.class, axoom.subjectz.v1.Subjectz.SubjectType.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object id_;
    /**
     * <pre>
     * The unique SubjectType ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The unique SubjectType ID
     * </pre>
     *
     * <code>string id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECORD_SCHEMA_URL_FIELD_NUMBER = 2;
    private volatile java.lang.Object recordSchemaUrl_;
    /**
     * <pre>
     * The schema used in Records from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_schema_url = 2;</code>
     */
    public java.lang.String getRecordSchemaUrl() {
      java.lang.Object ref = recordSchemaUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        recordSchemaUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The schema used in Records from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_schema_url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getRecordSchemaUrlBytes() {
      java.lang.Object ref = recordSchemaUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        recordSchemaUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RECORD_META_SCHEMA_URL_FIELD_NUMBER = 3;
    private volatile java.lang.Object recordMetaSchemaUrl_;
    /**
     * <pre>
     * The schema used in RecordMetas from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_meta_schema_url = 3;</code>
     */
    public java.lang.String getRecordMetaSchemaUrl() {
      java.lang.Object ref = recordMetaSchemaUrl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        recordMetaSchemaUrl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The schema used in RecordMetas from Subjects of this SubjectType
     * </pre>
     *
     * <code>string record_meta_schema_url = 3;</code>
     */
    public com.google.protobuf.ByteString
        getRecordMetaSchemaUrlBytes() {
      java.lang.Object ref = recordMetaSchemaUrl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        recordMetaSchemaUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LABELS_FIELD_NUMBER = 4;
    private static final class LabelsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> labels_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetLabels() {
      if (labels_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LabelsDefaultEntryHolder.defaultEntry);
      }
      return labels_;
    }

    public int getLabelsCount() {
      return internalGetLabels().getMap().size();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public boolean containsLabels(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetLabels().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLabelsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getLabels() {
      return getLabelsMap();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
      return internalGetLabels().getMap();
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Additional free-form labels
     * </pre>
     *
     * <code>map&lt;string, string&gt; labels = 4;</code>
     */

    public java.lang.String getLabelsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetLabels().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);
      }
      if (!getRecordSchemaUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, recordSchemaUrl_);
      }
      if (!getRecordMetaSchemaUrlBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, recordMetaSchemaUrl_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetLabels(),
          LabelsDefaultEntryHolder.defaultEntry,
          4);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);
      }
      if (!getRecordSchemaUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, recordSchemaUrl_);
      }
      if (!getRecordMetaSchemaUrlBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, recordMetaSchemaUrl_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetLabels().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        labels__ = LabelsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, labels__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axoom.subjectz.v1.Subjectz.SubjectType)) {
        return super.equals(obj);
      }
      axoom.subjectz.v1.Subjectz.SubjectType other = (axoom.subjectz.v1.Subjectz.SubjectType) obj;

      boolean result = true;
      result = result && getId()
          .equals(other.getId());
      result = result && getRecordSchemaUrl()
          .equals(other.getRecordSchemaUrl());
      result = result && getRecordMetaSchemaUrl()
          .equals(other.getRecordMetaSchemaUrl());
      result = result && internalGetLabels().equals(
          other.internalGetLabels());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      hash = (37 * hash) + RECORD_SCHEMA_URL_FIELD_NUMBER;
      hash = (53 * hash) + getRecordSchemaUrl().hashCode();
      hash = (37 * hash) + RECORD_META_SCHEMA_URL_FIELD_NUMBER;
      hash = (53 * hash) + getRecordMetaSchemaUrl().hashCode();
      if (!internalGetLabels().getMap().isEmpty()) {
        hash = (37 * hash) + LABELS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLabels().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axoom.subjectz.v1.Subjectz.SubjectType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axoom.subjectz.v1.SubjectType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axoom.subjectz.v1.SubjectType)
        axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableLabels();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axoom.subjectz.v1.Subjectz.SubjectType.class, axoom.subjectz.v1.Subjectz.SubjectType.Builder.class);
      }

      // Construct using axoom.subjectz.v1.Subjectz.SubjectType.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        id_ = "";

        recordSchemaUrl_ = "";

        recordMetaSchemaUrl_ = "";

        internalGetMutableLabels().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectType_descriptor;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectType getDefaultInstanceForType() {
        return axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance();
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectType build() {
        axoom.subjectz.v1.Subjectz.SubjectType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectType buildPartial() {
        axoom.subjectz.v1.Subjectz.SubjectType result = new axoom.subjectz.v1.Subjectz.SubjectType(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.id_ = id_;
        result.recordSchemaUrl_ = recordSchemaUrl_;
        result.recordMetaSchemaUrl_ = recordMetaSchemaUrl_;
        result.labels_ = internalGetLabels();
        result.labels_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axoom.subjectz.v1.Subjectz.SubjectType) {
          return mergeFrom((axoom.subjectz.v1.Subjectz.SubjectType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axoom.subjectz.v1.Subjectz.SubjectType other) {
        if (other == axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance()) return this;
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (!other.getRecordSchemaUrl().isEmpty()) {
          recordSchemaUrl_ = other.recordSchemaUrl_;
          onChanged();
        }
        if (!other.getRecordMetaSchemaUrl().isEmpty()) {
          recordMetaSchemaUrl_ = other.recordMetaSchemaUrl_;
          onChanged();
        }
        internalGetMutableLabels().mergeFrom(
            other.internalGetLabels());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axoom.subjectz.v1.Subjectz.SubjectType parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axoom.subjectz.v1.Subjectz.SubjectType) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object id_ = "";
      /**
       * <pre>
       * The unique SubjectType ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The unique SubjectType ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The unique SubjectType ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique SubjectType ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique SubjectType ID
       * </pre>
       *
       * <code>string id = 1;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object recordSchemaUrl_ = "";
      /**
       * <pre>
       * The schema used in Records from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_schema_url = 2;</code>
       */
      public java.lang.String getRecordSchemaUrl() {
        java.lang.Object ref = recordSchemaUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          recordSchemaUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The schema used in Records from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_schema_url = 2;</code>
       */
      public com.google.protobuf.ByteString
          getRecordSchemaUrlBytes() {
        java.lang.Object ref = recordSchemaUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          recordSchemaUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The schema used in Records from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_schema_url = 2;</code>
       */
      public Builder setRecordSchemaUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recordSchemaUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The schema used in Records from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_schema_url = 2;</code>
       */
      public Builder clearRecordSchemaUrl() {
        
        recordSchemaUrl_ = getDefaultInstance().getRecordSchemaUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The schema used in Records from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_schema_url = 2;</code>
       */
      public Builder setRecordSchemaUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recordSchemaUrl_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object recordMetaSchemaUrl_ = "";
      /**
       * <pre>
       * The schema used in RecordMetas from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_meta_schema_url = 3;</code>
       */
      public java.lang.String getRecordMetaSchemaUrl() {
        java.lang.Object ref = recordMetaSchemaUrl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          recordMetaSchemaUrl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The schema used in RecordMetas from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_meta_schema_url = 3;</code>
       */
      public com.google.protobuf.ByteString
          getRecordMetaSchemaUrlBytes() {
        java.lang.Object ref = recordMetaSchemaUrl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          recordMetaSchemaUrl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The schema used in RecordMetas from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_meta_schema_url = 3;</code>
       */
      public Builder setRecordMetaSchemaUrl(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        recordMetaSchemaUrl_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The schema used in RecordMetas from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_meta_schema_url = 3;</code>
       */
      public Builder clearRecordMetaSchemaUrl() {
        
        recordMetaSchemaUrl_ = getDefaultInstance().getRecordMetaSchemaUrl();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The schema used in RecordMetas from Subjects of this SubjectType
       * </pre>
       *
       * <code>string record_meta_schema_url = 3;</code>
       */
      public Builder setRecordMetaSchemaUrlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        recordMetaSchemaUrl_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> labels_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetLabels() {
        if (labels_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        return labels_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableLabels() {
        onChanged();;
        if (labels_ == null) {
          labels_ = com.google.protobuf.MapField.newMapField(
              LabelsDefaultEntryHolder.defaultEntry);
        }
        if (!labels_.isMutable()) {
          labels_ = labels_.copy();
        }
        return labels_;
      }

      public int getLabelsCount() {
        return internalGetLabels().getMap().size();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public boolean containsLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetLabels().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLabelsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getLabels() {
        return getLabelsMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getLabelsMap() {
        return internalGetLabels().getMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.lang.String getLabelsOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public java.lang.String getLabelsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetLabels().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLabels() {
        internalGetMutableLabels().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public Builder removeLabels(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableLabels() {
        return internalGetMutableLabels().getMutableMap();
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */
      public Builder putLabels(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableLabels().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Additional free-form labels
       * </pre>
       *
       * <code>map&lt;string, string&gt; labels = 4;</code>
       */

      public Builder putAllLabels(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableLabels().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axoom.subjectz.v1.SubjectType)
    }

    // @@protoc_insertion_point(class_scope:axoom.subjectz.v1.SubjectType)
    private static final axoom.subjectz.v1.Subjectz.SubjectType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axoom.subjectz.v1.Subjectz.SubjectType();
    }

    public static axoom.subjectz.v1.Subjectz.SubjectType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubjectType>
        PARSER = new com.google.protobuf.AbstractParser<SubjectType>() {
      @java.lang.Override
      public SubjectType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubjectType(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubjectType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubjectType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axoom.subjectz.v1.Subjectz.SubjectType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubjectTypeContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axoom.subjectz.v1.SubjectTypeContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    boolean hasSubjectType();
    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectType getSubjectType();
    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder();

    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    java.util.List<java.lang.String>
        getImplementsList();
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    int getImplementsCount();
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    java.lang.String getImplements(int index);
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    com.google.protobuf.ByteString
        getImplementsBytes(int index);

    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    java.util.List<java.lang.String>
        getImplementsGraphFlattenedList();
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    int getImplementsGraphFlattenedCount();
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    java.lang.String getImplementsGraphFlattened(int index);
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    com.google.protobuf.ByteString
        getImplementsGraphFlattenedBytes(int index);

    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> 
        getImplementsGraphList();
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplementsGraph(int index);
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    int getImplementsGraphCount();
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getImplementsGraphOrBuilderList();
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsGraphOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code axoom.subjectz.v1.SubjectTypeContext}
   */
  public  static final class SubjectTypeContext extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axoom.subjectz.v1.SubjectTypeContext)
      SubjectTypeContextOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubjectTypeContext.newBuilder() to construct.
    private SubjectTypeContext(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubjectTypeContext() {
      implements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      implementsGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      implementsGraph_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubjectTypeContext(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              axoom.subjectz.v1.Subjectz.SubjectType.Builder subBuilder = null;
              if (subjectType_ != null) {
                subBuilder = subjectType_.toBuilder();
              }
              subjectType_ = input.readMessage(axoom.subjectz.v1.Subjectz.SubjectType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subjectType_);
                subjectType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                implements_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              implements_.add(s);
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                implementsGraphFlattened_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000004;
              }
              implementsGraphFlattened_.add(s);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                implementsGraph_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>();
                mutable_bitField0_ |= 0x00000008;
              }
              implementsGraph_.add(
                  input.readMessage(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          implements_ = implements_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          implementsGraphFlattened_ = implementsGraphFlattened_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          implementsGraph_ = java.util.Collections.unmodifiableList(implementsGraph_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axoom.subjectz.v1.Subjectz.SubjectTypeContext.class, axoom.subjectz.v1.Subjectz.SubjectTypeContext.Builder.class);
    }

    private int bitField0_;
    public static final int SUBJECT_TYPE_FIELD_NUMBER = 1;
    private axoom.subjectz.v1.Subjectz.SubjectType subjectType_;
    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public boolean hasSubjectType() {
      return subjectType_ != null;
    }
    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectType getSubjectType() {
      return subjectType_ == null ? axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
    }
    /**
     * <pre>
     * The SubjectType to create
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder() {
      return getSubjectType();
    }

    public static final int IMPLEMENTS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList implements_;
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getImplementsList() {
      return implements_;
    }
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    public int getImplementsCount() {
      return implements_.size();
    }
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    public java.lang.String getImplements(int index) {
      return implements_.get(index);
    }
    /**
     * <pre>
     * The SubjectType's implemented root SubjecType IDs
     * </pre>
     *
     * <code>repeated string implements = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImplementsBytes(int index) {
      return implements_.getByteString(index);
    }

    public static final int IMPLEMENTS_GRAPH_FLATTENED_FIELD_NUMBER = 3;
    private com.google.protobuf.LazyStringList implementsGraphFlattened_;
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getImplementsGraphFlattenedList() {
      return implementsGraphFlattened_;
    }
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    public int getImplementsGraphFlattenedCount() {
      return implementsGraphFlattened_.size();
    }
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    public java.lang.String getImplementsGraphFlattened(int index) {
      return implementsGraphFlattened_.get(index);
    }
    /**
     * <pre>
     * The SubjectType's traversed implementations
     * </pre>
     *
     * <code>repeated string implements_graph_flattened = 3;</code>
     */
    public com.google.protobuf.ByteString
        getImplementsGraphFlattenedBytes(int index) {
      return implementsGraphFlattened_.getByteString(index);
    }

    public static final int IMPLEMENTS_GRAPH_FIELD_NUMBER = 4;
    private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> implementsGraph_;
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getImplementsGraphList() {
      return implementsGraph_;
    }
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getImplementsGraphOrBuilderList() {
      return implementsGraph_;
    }
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    public int getImplementsGraphCount() {
      return implementsGraph_.size();
    }
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplementsGraph(int index) {
      return implementsGraph_.get(index);
    }
    /**
     * <pre>
     * The SubjectType's implementation graph
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsGraphOrBuilder(
        int index) {
      return implementsGraph_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (subjectType_ != null) {
        output.writeMessage(1, getSubjectType());
      }
      for (int i = 0; i < implements_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, implements_.getRaw(i));
      }
      for (int i = 0; i < implementsGraphFlattened_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, implementsGraphFlattened_.getRaw(i));
      }
      for (int i = 0; i < implementsGraph_.size(); i++) {
        output.writeMessage(4, implementsGraph_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (subjectType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubjectType());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < implements_.size(); i++) {
          dataSize += computeStringSizeNoTag(implements_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getImplementsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < implementsGraphFlattened_.size(); i++) {
          dataSize += computeStringSizeNoTag(implementsGraphFlattened_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getImplementsGraphFlattenedList().size();
      }
      for (int i = 0; i < implementsGraph_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, implementsGraph_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axoom.subjectz.v1.Subjectz.SubjectTypeContext)) {
        return super.equals(obj);
      }
      axoom.subjectz.v1.Subjectz.SubjectTypeContext other = (axoom.subjectz.v1.Subjectz.SubjectTypeContext) obj;

      boolean result = true;
      result = result && (hasSubjectType() == other.hasSubjectType());
      if (hasSubjectType()) {
        result = result && getSubjectType()
            .equals(other.getSubjectType());
      }
      result = result && getImplementsList()
          .equals(other.getImplementsList());
      result = result && getImplementsGraphFlattenedList()
          .equals(other.getImplementsGraphFlattenedList());
      result = result && getImplementsGraphList()
          .equals(other.getImplementsGraphList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubjectType()) {
        hash = (37 * hash) + SUBJECT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSubjectType().hashCode();
      }
      if (getImplementsCount() > 0) {
        hash = (37 * hash) + IMPLEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getImplementsList().hashCode();
      }
      if (getImplementsGraphFlattenedCount() > 0) {
        hash = (37 * hash) + IMPLEMENTS_GRAPH_FLATTENED_FIELD_NUMBER;
        hash = (53 * hash) + getImplementsGraphFlattenedList().hashCode();
      }
      if (getImplementsGraphCount() > 0) {
        hash = (37 * hash) + IMPLEMENTS_GRAPH_FIELD_NUMBER;
        hash = (53 * hash) + getImplementsGraphList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axoom.subjectz.v1.Subjectz.SubjectTypeContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axoom.subjectz.v1.SubjectTypeContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axoom.subjectz.v1.SubjectTypeContext)
        axoom.subjectz.v1.Subjectz.SubjectTypeContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axoom.subjectz.v1.Subjectz.SubjectTypeContext.class, axoom.subjectz.v1.Subjectz.SubjectTypeContext.Builder.class);
      }

      // Construct using axoom.subjectz.v1.Subjectz.SubjectTypeContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getImplementsGraphFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subjectTypeBuilder_ == null) {
          subjectType_ = null;
        } else {
          subjectType_ = null;
          subjectTypeBuilder_ = null;
        }
        implements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        implementsGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (implementsGraphBuilder_ == null) {
          implementsGraph_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          implementsGraphBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeContext getDefaultInstanceForType() {
        return axoom.subjectz.v1.Subjectz.SubjectTypeContext.getDefaultInstance();
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeContext build() {
        axoom.subjectz.v1.Subjectz.SubjectTypeContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeContext buildPartial() {
        axoom.subjectz.v1.Subjectz.SubjectTypeContext result = new axoom.subjectz.v1.Subjectz.SubjectTypeContext(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (subjectTypeBuilder_ == null) {
          result.subjectType_ = subjectType_;
        } else {
          result.subjectType_ = subjectTypeBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          implements_ = implements_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.implements_ = implements_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          implementsGraphFlattened_ = implementsGraphFlattened_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.implementsGraphFlattened_ = implementsGraphFlattened_;
        if (implementsGraphBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            implementsGraph_ = java.util.Collections.unmodifiableList(implementsGraph_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.implementsGraph_ = implementsGraph_;
        } else {
          result.implementsGraph_ = implementsGraphBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axoom.subjectz.v1.Subjectz.SubjectTypeContext) {
          return mergeFrom((axoom.subjectz.v1.Subjectz.SubjectTypeContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axoom.subjectz.v1.Subjectz.SubjectTypeContext other) {
        if (other == axoom.subjectz.v1.Subjectz.SubjectTypeContext.getDefaultInstance()) return this;
        if (other.hasSubjectType()) {
          mergeSubjectType(other.getSubjectType());
        }
        if (!other.implements_.isEmpty()) {
          if (implements_.isEmpty()) {
            implements_ = other.implements_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureImplementsIsMutable();
            implements_.addAll(other.implements_);
          }
          onChanged();
        }
        if (!other.implementsGraphFlattened_.isEmpty()) {
          if (implementsGraphFlattened_.isEmpty()) {
            implementsGraphFlattened_ = other.implementsGraphFlattened_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureImplementsGraphFlattenedIsMutable();
            implementsGraphFlattened_.addAll(other.implementsGraphFlattened_);
          }
          onChanged();
        }
        if (implementsGraphBuilder_ == null) {
          if (!other.implementsGraph_.isEmpty()) {
            if (implementsGraph_.isEmpty()) {
              implementsGraph_ = other.implementsGraph_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureImplementsGraphIsMutable();
              implementsGraph_.addAll(other.implementsGraph_);
            }
            onChanged();
          }
        } else {
          if (!other.implementsGraph_.isEmpty()) {
            if (implementsGraphBuilder_.isEmpty()) {
              implementsGraphBuilder_.dispose();
              implementsGraphBuilder_ = null;
              implementsGraph_ = other.implementsGraph_;
              bitField0_ = (bitField0_ & ~0x00000008);
              implementsGraphBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getImplementsGraphFieldBuilder() : null;
            } else {
              implementsGraphBuilder_.addAllMessages(other.implementsGraph_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axoom.subjectz.v1.Subjectz.SubjectTypeContext parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axoom.subjectz.v1.Subjectz.SubjectTypeContext) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private axoom.subjectz.v1.Subjectz.SubjectType subjectType_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder> subjectTypeBuilder_;
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public boolean hasSubjectType() {
        return subjectTypeBuilder_ != null || subjectType_ != null;
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectType getSubjectType() {
        if (subjectTypeBuilder_ == null) {
          return subjectType_ == null ? axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
        } else {
          return subjectTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder setSubjectType(axoom.subjectz.v1.Subjectz.SubjectType value) {
        if (subjectTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subjectType_ = value;
          onChanged();
        } else {
          subjectTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder setSubjectType(
          axoom.subjectz.v1.Subjectz.SubjectType.Builder builderForValue) {
        if (subjectTypeBuilder_ == null) {
          subjectType_ = builderForValue.build();
          onChanged();
        } else {
          subjectTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder mergeSubjectType(axoom.subjectz.v1.Subjectz.SubjectType value) {
        if (subjectTypeBuilder_ == null) {
          if (subjectType_ != null) {
            subjectType_ =
              axoom.subjectz.v1.Subjectz.SubjectType.newBuilder(subjectType_).mergeFrom(value).buildPartial();
          } else {
            subjectType_ = value;
          }
          onChanged();
        } else {
          subjectTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder clearSubjectType() {
        if (subjectTypeBuilder_ == null) {
          subjectType_ = null;
          onChanged();
        } else {
          subjectType_ = null;
          subjectTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectType.Builder getSubjectTypeBuilder() {
        
        onChanged();
        return getSubjectTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder() {
        if (subjectTypeBuilder_ != null) {
          return subjectTypeBuilder_.getMessageOrBuilder();
        } else {
          return subjectType_ == null ?
              axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
        }
      }
      /**
       * <pre>
       * The SubjectType to create
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder> 
          getSubjectTypeFieldBuilder() {
        if (subjectTypeBuilder_ == null) {
          subjectTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder>(
                  getSubjectType(),
                  getParentForChildren(),
                  isClean());
          subjectType_ = null;
        }
        return subjectTypeBuilder_;
      }

      private com.google.protobuf.LazyStringList implements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureImplementsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          implements_ = new com.google.protobuf.LazyStringArrayList(implements_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getImplementsList() {
        return implements_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public int getImplementsCount() {
        return implements_.size();
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public java.lang.String getImplements(int index) {
        return implements_.get(index);
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public com.google.protobuf.ByteString
          getImplementsBytes(int index) {
        return implements_.getByteString(index);
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public Builder setImplements(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImplementsIsMutable();
        implements_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public Builder addImplements(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImplementsIsMutable();
        implements_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public Builder addAllImplements(
          java.lang.Iterable<java.lang.String> values) {
        ensureImplementsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, implements_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public Builder clearImplements() {
        implements_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implemented root SubjecType IDs
       * </pre>
       *
       * <code>repeated string implements = 2;</code>
       */
      public Builder addImplementsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureImplementsIsMutable();
        implements_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList implementsGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureImplementsGraphFlattenedIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          implementsGraphFlattened_ = new com.google.protobuf.LazyStringArrayList(implementsGraphFlattened_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getImplementsGraphFlattenedList() {
        return implementsGraphFlattened_.getUnmodifiableView();
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public int getImplementsGraphFlattenedCount() {
        return implementsGraphFlattened_.size();
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public java.lang.String getImplementsGraphFlattened(int index) {
        return implementsGraphFlattened_.get(index);
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public com.google.protobuf.ByteString
          getImplementsGraphFlattenedBytes(int index) {
        return implementsGraphFlattened_.getByteString(index);
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public Builder setImplementsGraphFlattened(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImplementsGraphFlattenedIsMutable();
        implementsGraphFlattened_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public Builder addImplementsGraphFlattened(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureImplementsGraphFlattenedIsMutable();
        implementsGraphFlattened_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public Builder addAllImplementsGraphFlattened(
          java.lang.Iterable<java.lang.String> values) {
        ensureImplementsGraphFlattenedIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, implementsGraphFlattened_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public Builder clearImplementsGraphFlattened() {
        implementsGraphFlattened_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The SubjectType's traversed implementations
       * </pre>
       *
       * <code>repeated string implements_graph_flattened = 3;</code>
       */
      public Builder addImplementsGraphFlattenedBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureImplementsGraphFlattenedIsMutable();
        implementsGraphFlattened_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> implementsGraph_ =
        java.util.Collections.emptyList();
      private void ensureImplementsGraphIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          implementsGraph_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>(implementsGraph_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> implementsGraphBuilder_;

      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getImplementsGraphList() {
        if (implementsGraphBuilder_ == null) {
          return java.util.Collections.unmodifiableList(implementsGraph_);
        } else {
          return implementsGraphBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public int getImplementsGraphCount() {
        if (implementsGraphBuilder_ == null) {
          return implementsGraph_.size();
        } else {
          return implementsGraphBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplementsGraph(int index) {
        if (implementsGraphBuilder_ == null) {
          return implementsGraph_.get(index);
        } else {
          return implementsGraphBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder setImplementsGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsGraphIsMutable();
          implementsGraph_.set(index, value);
          onChanged();
        } else {
          implementsGraphBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder setImplementsGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsGraphBuilder_ == null) {
          ensureImplementsGraphIsMutable();
          implementsGraph_.set(index, builderForValue.build());
          onChanged();
        } else {
          implementsGraphBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder addImplementsGraph(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsGraphIsMutable();
          implementsGraph_.add(value);
          onChanged();
        } else {
          implementsGraphBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder addImplementsGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsGraphBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsGraphIsMutable();
          implementsGraph_.add(index, value);
          onChanged();
        } else {
          implementsGraphBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder addImplementsGraph(
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsGraphBuilder_ == null) {
          ensureImplementsGraphIsMutable();
          implementsGraph_.add(builderForValue.build());
          onChanged();
        } else {
          implementsGraphBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder addImplementsGraph(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsGraphBuilder_ == null) {
          ensureImplementsGraphIsMutable();
          implementsGraph_.add(index, builderForValue.build());
          onChanged();
        } else {
          implementsGraphBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder addAllImplementsGraph(
          java.lang.Iterable<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> values) {
        if (implementsGraphBuilder_ == null) {
          ensureImplementsGraphIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, implementsGraph_);
          onChanged();
        } else {
          implementsGraphBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder clearImplementsGraph() {
        if (implementsGraphBuilder_ == null) {
          implementsGraph_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          implementsGraphBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public Builder removeImplementsGraph(int index) {
        if (implementsGraphBuilder_ == null) {
          ensureImplementsGraphIsMutable();
          implementsGraph_.remove(index);
          onChanged();
        } else {
          implementsGraphBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder getImplementsGraphBuilder(
          int index) {
        return getImplementsGraphFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsGraphOrBuilder(
          int index) {
        if (implementsGraphBuilder_ == null) {
          return implementsGraph_.get(index);  } else {
          return implementsGraphBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
           getImplementsGraphOrBuilderList() {
        if (implementsGraphBuilder_ != null) {
          return implementsGraphBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(implementsGraph_);
        }
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addImplementsGraphBuilder() {
        return getImplementsGraphFieldBuilder().addBuilder(
            axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addImplementsGraphBuilder(
          int index) {
        return getImplementsGraphFieldBuilder().addBuilder(
            index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * The SubjectType's implementation graph
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements_graph = 4;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder> 
           getImplementsGraphBuilderList() {
        return getImplementsGraphFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
          getImplementsGraphFieldBuilder() {
        if (implementsGraphBuilder_ == null) {
          implementsGraphBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder>(
                  implementsGraph_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          implementsGraph_ = null;
        }
        return implementsGraphBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axoom.subjectz.v1.SubjectTypeContext)
    }

    // @@protoc_insertion_point(class_scope:axoom.subjectz.v1.SubjectTypeContext)
    private static final axoom.subjectz.v1.Subjectz.SubjectTypeContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axoom.subjectz.v1.Subjectz.SubjectTypeContext();
    }

    public static axoom.subjectz.v1.Subjectz.SubjectTypeContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubjectTypeContext>
        PARSER = new com.google.protobuf.AbstractParser<SubjectTypeContext>() {
      @java.lang.Override
      public SubjectTypeContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubjectTypeContext(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubjectTypeContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubjectTypeContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axoom.subjectz.v1.Subjectz.SubjectTypeContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SubjectTypeGraphNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axoom.subjectz.v1.SubjectTypeGraphNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    boolean hasSubjectType();
    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectType getSubjectType();
    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder();

    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> 
        getImplementsList();
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplements(int index);
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    int getImplementsCount();
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getImplementsOrBuilderList();
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code axoom.subjectz.v1.SubjectTypeGraphNode}
   */
  public  static final class SubjectTypeGraphNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:axoom.subjectz.v1.SubjectTypeGraphNode)
      SubjectTypeGraphNodeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SubjectTypeGraphNode.newBuilder() to construct.
    private SubjectTypeGraphNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SubjectTypeGraphNode() {
      implements_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SubjectTypeGraphNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              axoom.subjectz.v1.Subjectz.SubjectType.Builder subBuilder = null;
              if (subjectType_ != null) {
                subBuilder = subjectType_.toBuilder();
              }
              subjectType_ = input.readMessage(axoom.subjectz.v1.Subjectz.SubjectType.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(subjectType_);
                subjectType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                implements_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>();
                mutable_bitField0_ |= 0x00000002;
              }
              implements_.add(
                  input.readMessage(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          implements_ = java.util.Collections.unmodifiableList(implements_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.class, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder.class);
    }

    private int bitField0_;
    public static final int SUBJECT_TYPE_FIELD_NUMBER = 1;
    private axoom.subjectz.v1.Subjectz.SubjectType subjectType_;
    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public boolean hasSubjectType() {
      return subjectType_ != null;
    }
    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectType getSubjectType() {
      return subjectType_ == null ? axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
    }
    /**
     * <pre>
     * The SubjectType
     * </pre>
     *
     * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder() {
      return getSubjectType();
    }

    public static final int IMPLEMENTS_FIELD_NUMBER = 2;
    private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> implements_;
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getImplementsList() {
      return implements_;
    }
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
        getImplementsOrBuilderList() {
      return implements_;
    }
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    public int getImplementsCount() {
      return implements_.size();
    }
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplements(int index) {
      return implements_.get(index);
    }
    /**
     * <pre>
     * SubjectTypes implemented by this node
     * </pre>
     *
     * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
     */
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsOrBuilder(
        int index) {
      return implements_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (subjectType_ != null) {
        output.writeMessage(1, getSubjectType());
      }
      for (int i = 0; i < implements_.size(); i++) {
        output.writeMessage(2, implements_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (subjectType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSubjectType());
      }
      for (int i = 0; i < implements_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, implements_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode)) {
        return super.equals(obj);
      }
      axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode other = (axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode) obj;

      boolean result = true;
      result = result && (hasSubjectType() == other.hasSubjectType());
      if (hasSubjectType()) {
        result = result && getSubjectType()
            .equals(other.getSubjectType());
      }
      result = result && getImplementsList()
          .equals(other.getImplementsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSubjectType()) {
        hash = (37 * hash) + SUBJECT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getSubjectType().hashCode();
      }
      if (getImplementsCount() > 0) {
        hash = (37 * hash) + IMPLEMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getImplementsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code axoom.subjectz.v1.SubjectTypeGraphNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:axoom.subjectz.v1.SubjectTypeGraphNode)
        axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.class, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder.class);
      }

      // Construct using axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getImplementsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (subjectTypeBuilder_ == null) {
          subjectType_ = null;
        } else {
          subjectType_ = null;
          subjectTypeBuilder_ = null;
        }
        if (implementsBuilder_ == null) {
          implements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          implementsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return axoom.subjectz.v1.Subjectz.internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getDefaultInstanceForType() {
        return axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance();
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode build() {
        axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode buildPartial() {
        axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode result = new axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (subjectTypeBuilder_ == null) {
          result.subjectType_ = subjectType_;
        } else {
          result.subjectType_ = subjectTypeBuilder_.build();
        }
        if (implementsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            implements_ = java.util.Collections.unmodifiableList(implements_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.implements_ = implements_;
        } else {
          result.implements_ = implementsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode) {
          return mergeFrom((axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode other) {
        if (other == axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance()) return this;
        if (other.hasSubjectType()) {
          mergeSubjectType(other.getSubjectType());
        }
        if (implementsBuilder_ == null) {
          if (!other.implements_.isEmpty()) {
            if (implements_.isEmpty()) {
              implements_ = other.implements_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureImplementsIsMutable();
              implements_.addAll(other.implements_);
            }
            onChanged();
          }
        } else {
          if (!other.implements_.isEmpty()) {
            if (implementsBuilder_.isEmpty()) {
              implementsBuilder_.dispose();
              implementsBuilder_ = null;
              implements_ = other.implements_;
              bitField0_ = (bitField0_ & ~0x00000002);
              implementsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getImplementsFieldBuilder() : null;
            } else {
              implementsBuilder_.addAllMessages(other.implements_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private axoom.subjectz.v1.Subjectz.SubjectType subjectType_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder> subjectTypeBuilder_;
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public boolean hasSubjectType() {
        return subjectTypeBuilder_ != null || subjectType_ != null;
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectType getSubjectType() {
        if (subjectTypeBuilder_ == null) {
          return subjectType_ == null ? axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
        } else {
          return subjectTypeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder setSubjectType(axoom.subjectz.v1.Subjectz.SubjectType value) {
        if (subjectTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          subjectType_ = value;
          onChanged();
        } else {
          subjectTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder setSubjectType(
          axoom.subjectz.v1.Subjectz.SubjectType.Builder builderForValue) {
        if (subjectTypeBuilder_ == null) {
          subjectType_ = builderForValue.build();
          onChanged();
        } else {
          subjectTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder mergeSubjectType(axoom.subjectz.v1.Subjectz.SubjectType value) {
        if (subjectTypeBuilder_ == null) {
          if (subjectType_ != null) {
            subjectType_ =
              axoom.subjectz.v1.Subjectz.SubjectType.newBuilder(subjectType_).mergeFrom(value).buildPartial();
          } else {
            subjectType_ = value;
          }
          onChanged();
        } else {
          subjectTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public Builder clearSubjectType() {
        if (subjectTypeBuilder_ == null) {
          subjectType_ = null;
          onChanged();
        } else {
          subjectType_ = null;
          subjectTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectType.Builder getSubjectTypeBuilder() {
        
        onChanged();
        return getSubjectTypeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder getSubjectTypeOrBuilder() {
        if (subjectTypeBuilder_ != null) {
          return subjectTypeBuilder_.getMessageOrBuilder();
        } else {
          return subjectType_ == null ?
              axoom.subjectz.v1.Subjectz.SubjectType.getDefaultInstance() : subjectType_;
        }
      }
      /**
       * <pre>
       * The SubjectType
       * </pre>
       *
       * <code>.axoom.subjectz.v1.SubjectType subject_type = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder> 
          getSubjectTypeFieldBuilder() {
        if (subjectTypeBuilder_ == null) {
          subjectTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.SubjectType, axoom.subjectz.v1.Subjectz.SubjectType.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeOrBuilder>(
                  getSubjectType(),
                  getParentForChildren(),
                  isClean());
          subjectType_ = null;
        }
        return subjectTypeBuilder_;
      }

      private java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> implements_ =
        java.util.Collections.emptyList();
      private void ensureImplementsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          implements_ = new java.util.ArrayList<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode>(implements_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> implementsBuilder_;

      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> getImplementsList() {
        if (implementsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(implements_);
        } else {
          return implementsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public int getImplementsCount() {
        if (implementsBuilder_ == null) {
          return implements_.size();
        } else {
          return implementsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getImplements(int index) {
        if (implementsBuilder_ == null) {
          return implements_.get(index);
        } else {
          return implementsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder setImplements(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsIsMutable();
          implements_.set(index, value);
          onChanged();
        } else {
          implementsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder setImplements(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsBuilder_ == null) {
          ensureImplementsIsMutable();
          implements_.set(index, builderForValue.build());
          onChanged();
        } else {
          implementsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder addImplements(axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsIsMutable();
          implements_.add(value);
          onChanged();
        } else {
          implementsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder addImplements(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode value) {
        if (implementsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureImplementsIsMutable();
          implements_.add(index, value);
          onChanged();
        } else {
          implementsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder addImplements(
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsBuilder_ == null) {
          ensureImplementsIsMutable();
          implements_.add(builderForValue.build());
          onChanged();
        } else {
          implementsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder addImplements(
          int index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder builderForValue) {
        if (implementsBuilder_ == null) {
          ensureImplementsIsMutable();
          implements_.add(index, builderForValue.build());
          onChanged();
        } else {
          implementsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder addAllImplements(
          java.lang.Iterable<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode> values) {
        if (implementsBuilder_ == null) {
          ensureImplementsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, implements_);
          onChanged();
        } else {
          implementsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder clearImplements() {
        if (implementsBuilder_ == null) {
          implements_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          implementsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public Builder removeImplements(int index) {
        if (implementsBuilder_ == null) {
          ensureImplementsIsMutable();
          implements_.remove(index);
          onChanged();
        } else {
          implementsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder getImplementsBuilder(
          int index) {
        return getImplementsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder getImplementsOrBuilder(
          int index) {
        if (implementsBuilder_ == null) {
          return implements_.get(index);  } else {
          return implementsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public java.util.List<? extends axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
           getImplementsOrBuilderList() {
        if (implementsBuilder_ != null) {
          return implementsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(implements_);
        }
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addImplementsBuilder() {
        return getImplementsFieldBuilder().addBuilder(
            axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder addImplementsBuilder(
          int index) {
        return getImplementsFieldBuilder().addBuilder(
            index, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.getDefaultInstance());
      }
      /**
       * <pre>
       * SubjectTypes implemented by this node
       * </pre>
       *
       * <code>repeated .axoom.subjectz.v1.SubjectTypeGraphNode implements = 2;</code>
       */
      public java.util.List<axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder> 
           getImplementsBuilderList() {
        return getImplementsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder> 
          getImplementsFieldBuilder() {
        if (implementsBuilder_ == null) {
          implementsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode.Builder, axoom.subjectz.v1.Subjectz.SubjectTypeGraphNodeOrBuilder>(
                  implements_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          implements_ = null;
        }
        return implementsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:axoom.subjectz.v1.SubjectTypeGraphNode)
    }

    // @@protoc_insertion_point(class_scope:axoom.subjectz.v1.SubjectTypeGraphNode)
    private static final axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode();
    }

    public static axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SubjectTypeGraphNode>
        PARSER = new com.google.protobuf.AbstractParser<SubjectTypeGraphNode>() {
      @java.lang.Override
      public SubjectTypeGraphNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubjectTypeGraphNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SubjectTypeGraphNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SubjectTypeGraphNode> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public axoom.subjectz.v1.Subjectz.SubjectTypeGraphNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_Subject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_Subject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_Subject_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_Subject_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_SubjectContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_SubjectContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_SubjectType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_SubjectType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_SubjectTypeContext_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016subjectz.proto\022\021axoom.subjectz.v1\"\212\001\n\007" +
      "Subject\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\0226\n\006lab" +
      "els\030\004 \003(\0132&.axoom.subjectz.v1.Subject.La" +
      "belsEntry\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\t:\0028\001\"\265\001\n\016SubjectContext\022+\n\007s" +
      "ubject\030\001 \001(\0132\032.axoom.subjectz.v1.Subject" +
      "\022\023\n\013instance_of\030\002 \003(\t\022 \n\030instance_graph_" +
      "flattened\030\003 \003(\t\022?\n\016instance_graph\030\004 \003(\0132" +
      "\'.axoom.subjectz.v1.SubjectTypeGraphNode" +
      "\"\277\001\n\013SubjectType\022\n\n\002id\030\001 \001(\t\022\031\n\021record_s" +
      "chema_url\030\002 \001(\t\022\036\n\026record_meta_schema_ur" +
      "l\030\003 \001(\t\022:\n\006labels\030\004 \003(\0132*.axoom.subjectz" +
      ".v1.SubjectType.LabelsEntry\032-\n\013LabelsEnt" +
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\305\001\n\022S" +
      "ubjectTypeContext\0224\n\014subject_type\030\001 \001(\0132" +
      "\036.axoom.subjectz.v1.SubjectType\022\022\n\nimple" +
      "ments\030\002 \003(\t\022\"\n\032implements_graph_flattene" +
      "d\030\003 \003(\t\022A\n\020implements_graph\030\004 \003(\0132\'.axoo" +
      "m.subjectz.v1.SubjectTypeGraphNode\"\211\001\n\024S" +
      "ubjectTypeGraphNode\0224\n\014subject_type\030\001 \001(" +
      "\0132\036.axoom.subjectz.v1.SubjectType\022;\n\nimp" +
      "lements\030\002 \003(\0132\'.axoom.subjectz.v1.Subjec" +
      "tTypeGraphNodeB-Z+gitlab.axoom.tech/iot/" +
      "go-rillaz/subjectz/v1b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_axoom_subjectz_v1_Subject_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_axoom_subjectz_v1_Subject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_Subject_descriptor,
        new java.lang.String[] { "Id", "Name", "Labels", });
    internal_static_axoom_subjectz_v1_Subject_LabelsEntry_descriptor =
      internal_static_axoom_subjectz_v1_Subject_descriptor.getNestedTypes().get(0);
    internal_static_axoom_subjectz_v1_Subject_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_Subject_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_axoom_subjectz_v1_SubjectContext_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_axoom_subjectz_v1_SubjectContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_SubjectContext_descriptor,
        new java.lang.String[] { "Subject", "InstanceOf", "InstanceGraphFlattened", "InstanceGraph", });
    internal_static_axoom_subjectz_v1_SubjectType_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_axoom_subjectz_v1_SubjectType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_SubjectType_descriptor,
        new java.lang.String[] { "Id", "RecordSchemaUrl", "RecordMetaSchemaUrl", "Labels", });
    internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_descriptor =
      internal_static_axoom_subjectz_v1_SubjectType_descriptor.getNestedTypes().get(0);
    internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_SubjectType_LabelsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_axoom_subjectz_v1_SubjectTypeContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_SubjectTypeContext_descriptor,
        new java.lang.String[] { "SubjectType", "Implements", "ImplementsGraphFlattened", "ImplementsGraph", });
    internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_axoom_subjectz_v1_SubjectTypeGraphNode_descriptor,
        new java.lang.String[] { "SubjectType", "Implements", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
